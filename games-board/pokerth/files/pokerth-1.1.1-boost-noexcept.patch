Keep dynamic exception specifications in sync with boost.
See also: https://bugs.gentoo.org/show_bug.cgi?id=603354

--- a/src/third_party/websocketpp/websocketpp/error.hpp
+++ b/src/third_party/websocketpp/websocketpp/error.hpp
@@ -122,7 +122,7 @@
 public:
     category() {}
 
-    char const * name() const _WEBSOCKETPP_NOEXCEPT_TOKEN_ {
+    char const * name() const BOOST_SYSTEM_NOEXCEPT {
         return "websocketpp";
     }
 
--- a/src/third_party/websocketpp/websocketpp/extensions/extension.hpp
+++ b/src/third_party/websocketpp/websocketpp/extensions/extension.hpp
@@ -62,7 +62,7 @@
 public:
     category() {}
 
-    const char *name() const _WEBSOCKETPP_NOEXCEPT_TOKEN_ {
+    const char *name() const BOOST_SYSTEM_NOEXCEPT {
         return "websocketpp.extension";
     }
 
--- a/src/third_party/websocketpp/websocketpp/processors/base.hpp
+++ b/src/third_party/websocketpp/websocketpp/processors/base.hpp
@@ -159,7 +159,7 @@
 public:
     processor_category() {}
 
-    char const * name() const _WEBSOCKETPP_NOEXCEPT_TOKEN_ {
+    char const * name() const BOOST_SYSTEM_NOEXCEPT {
         return "websocketpp.processor";
     }
 
--- a/src/third_party/websocketpp/websocketpp/transport/asio/base.hpp
+++ b/src/third_party/websocketpp/websocketpp/transport/asio/base.hpp
@@ -202,7 +202,7 @@
 /// Asio transport error category
 class category : public lib::error_category {
 public:
-    char const * name() const _WEBSOCKETPP_NOEXCEPT_TOKEN_ {
+    char const * name() const BOOST_SYSTEM_NOEXCEPT {
         return "websocketpp.transport.asio";
     }
 
--- a/src/third_party/websocketpp/websocketpp/transport/asio/security/base.hpp
+++ b/src/third_party/websocketpp/websocketpp/transport/asio/security/base.hpp
@@ -102,7 +102,7 @@
 /// Error category related to asio transport socket policies
 class socket_category : public lib::error_category {
 public:
-    const char *name() const _WEBSOCKETPP_NOEXCEPT_TOKEN_ {
+    const char *name() const BOOST_SYSTEM_NOEXCEPT {
         return "websocketpp.transport.asio.socket";
     }
 
--- a/src/third_party/websocketpp/websocketpp/transport/base/connection.hpp
+++ b/src/third_party/websocketpp/websocketpp/transport/base/connection.hpp
@@ -179,7 +179,7 @@
     public:
     category() {}
 
-    char const * name() const _WEBSOCKETPP_NOEXCEPT_TOKEN_ {
+    char const * name() const BOOST_SYSTEM_NOEXCEPT {
         return "websocketpp.transport";
     }
 
--- a/src/third_party/websocketpp/websocketpp/transport/iostream/base.hpp
+++ b/src/third_party/websocketpp/websocketpp/transport/iostream/base.hpp
@@ -64,7 +64,7 @@
     public:
     category() {}
 
-    char const * name() const _WEBSOCKETPP_NOEXCEPT_TOKEN_ {
+    char const * name() const BOOST_SYSTEM_NOEXCEPT {
         return "websocketpp.transport.iostream";
     }
 
