From 6e46d0cd3969f6c13ff61c95c81a975192232fed Mon Sep 17 00:00:00 2001
From: Markus Unterwaditzer <markus@unterwaditzer.net>
Date: Mon, 13 Jun 2016 20:29:21 +0200
Subject: [PATCH] Fix PyPy3 support and add bug references

Fix #1841
---
 flask/_compat.py | 18 +++++++++++++-----
 2 files changed, 20 insertions(+), 5 deletions(-)

diff --git a/flask/_compat.py b/flask/_compat.py
index bfe607d..071628f 100644
--- a/flask/_compat.py
+++ b/flask/_compat.py
@@ -65,17 +65,25 @@ def __new__(cls, name, this_bases, d):
 
 
 # Certain versions of pypy have a bug where clearing the exception stack
-# breaks the __exit__ function in a very peculiar way.  This is currently
-# true for pypy 2.2.1 for instance.  The second level of exception blocks
-# is necessary because pypy seems to forget to check if an exception
-# happened until the next bytecode instruction?
+# breaks the __exit__ function in a very peculiar way.  The second level of
+# exception blocks is necessary because pypy seems to forget to check if an
+# exception happened until the next bytecode instruction?
+#
+# Relevant PyPy bugfix commit:
+# https://bitbucket.org/pypy/pypy/commits/77ecf91c635a287e88e60d8ddb0f4e9df4003301
+# According to ronan on #pypy IRC, it is released in PyPy2 2.3 and later
+# versions.
+#
+# Ubuntu 14.04 has PyPy 2.2.1, which does exhibit this bug.
 BROKEN_PYPY_CTXMGR_EXIT = False
 if hasattr(sys, 'pypy_version_info'):
     class _Mgr(object):
         def __enter__(self):
             return self
         def __exit__(self, *args):
-            sys.exc_clear()
+            if hasattr(sys, 'exc_clear'):
+                # Python 3 (PyPy3) doesn't have exc_clear
+                sys.exc_clear()
     try:
         try:
             with _Mgr():
